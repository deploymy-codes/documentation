---
title: Deploy My Codes API Reference

language_tabs:
  - http
  - shell: cURL
  - ruby

toc_footers:
  - <a href='https://www.deploymy.codes'>Register for a developer key</a>
  - <a href='http://blog.deploymy.codes'>Read the blog</a>

includes:
  - user/explanation
  - user/self
  - user/remote_projects
  - user/organizations
  - user/remote_organizations_projects
  - user/remote_project
  - project/explanation
  - project/project_list
  - project/get_project
  - project/create_environment
  - project/get_environment
  - project/environment_list
  - stream/explanation
  - stream/deployment

search: true
---

# Overview

Welcome to the Deploy My Codes API! You can use our API to access deploymy.codes API endpoints, which can help you to deploy your projects.

We just provide the API endpoint, there is no package available for your preferred languages (sorry) but it's easy enough to use the API with your default packages, we promise.

# Authentication

``` http
GET /users/self HTTP/1.1
Host: api.deploymy.codes
Content-Type: application/json
Authorization: <Your-API-Key>
```

```shell
curl <%= deploy_my_codes_api_url %>/users/self -H "Authorization:<Your-API-Key>"
```

```ruby
require 'json'
require 'net/http'

url     = URI.parse('https://<%=  deploy_my_codes_api_url %>/users/self')
request = Net::HTTP::Get.new(url.to_s)
request['Authorization'] = '<Your-API-Key>'
result  = Net::HTTP.start(url.host, url.port) { |http| http.request(req) }
```

To authenticate against DMC, you need an API access token.
reating a temporary GitHub token

## Creating a temporary GitHub token

``` http
POST /authorizations HTTP/1.1
Host: api.github.com
Content-Type: application/json
Authorization: Basic ...

{
  "scopes": [
    "user", "repo",
    "write:repo_hook"
  ],
  "note": "temporary token to auth against DMC"
}
```

``` http
HTTP/1.1 201 Created
Content-Type: application/json

{
  "id": 1,
  "url": "https://api.github.com/authorizations/1",
  "scopes": [
    "user", "repo",
    "write:repo_hook"
  ],
  "token": "YOUR GITHUB TOKEN",
  "note": "temporary token to auth against DMC"
}
```

``` http
GET /auth/github HTTP/1.1
Host: api.deploymy.codes
Content-Type: application/json

{"code":"YOUR GITHUB TOKEN"}
```

``` http
HTTP/1.1 200 OK
Content-Type: application/json

{
  "api_key": "XXXX-XXXX-XXXX-XXXX",
  "email": "john@doe.com",
  "full_name": "John Doe",
  "avatar_url": "https://avatars1.githubusercontent.com/u/XXXXXXX?v=3&s=400",
  "username": "johndoe"
}
```

To create the GitHub token, you can either use the [GitHub web interface](https://github.com/settings/applications) or automate it via the [GitHub API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization).

Make sure your GitHub token has the scopes `repo`, `user` and `write:repo_hook` required by DMC.

If you automate this process, authentication will become a handshake consisting of two requests:

* Create a GitHub token via the GitHub API, store GitHub token and URL.
* Use the `/auth/github` endpoint to exchange it for an access token. Store the access token.
